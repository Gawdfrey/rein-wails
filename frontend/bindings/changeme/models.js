// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

/**
 * ModuleResponse is used for API responses to ensure consistent JSON serialization
 */
export class ModuleResponse {
    /**
     * Creates a new ModuleResponse instance.
     * @param {Partial<ModuleResponse>} [$$source = {}] - The source object to create the ModuleResponse.
     */
    constructor($$source = {}) {
        if (!("id" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["id"] = "";
        }
        if (!("name" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["name"] = "";
        }
        if (!("description" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["description"] = "";
        }
        if (!("lastUpdated" in $$source)) {
            /**
             * ISO date string
             * @member
             * @type {string}
             */
            this["lastUpdated"] = "";
        }
        if (!("tags" in $$source)) {
            /**
             * @member
             * @type {string[]}
             */
            this["tags"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new ModuleResponse instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {ModuleResponse}
     */
    static createFrom($$source = {}) {
        const $$createField4_0 = $$createType0;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("tags" in $$parsedSource) {
            $$parsedSource["tags"] = $$createField4_0($$parsedSource["tags"]);
        }
        return new ModuleResponse(/** @type {Partial<ModuleResponse>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
